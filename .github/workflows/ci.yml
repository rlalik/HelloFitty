name: Continuous Integration

on:
  push:
    branches:
    - master

  pull_request:
    branches:
    - master

jobs:
  lint:
    runs-on: ubuntu-24.04

    steps:
    - uses: actions/checkout@v5

    - uses: actions/setup-python@v5
      with: { python-version: "3.12" }

    - name: Install codespell
      run: pip3 install codespell

    - name: Lint
      run: cmake -D FORMAT_COMMAND=clang-format-18 -P cmake/lint.cmake

    - name: Spell check
      if: always()
      run: cmake -P cmake/spell.cmake

  coverage:
    needs: [lint]

    runs-on: ubuntu-24.04

    container:
      image: rootproject/root:latest

    # To enable coverage, delete the last line from the conditional below and
    # edit the "<name>" placeholder to your GitHub name.
    # If you do not wish to use codecov, then simply delete this job from the
    # workflow.
    if: github.repository_owner == 'rlalik'

    steps:
    - uses: actions/checkout@v5

    - name: Install LCov
      run: apt-get update -q
        && apt-get install lcov -q -y

    - name: Configure
      run: cmake --preset=ci-coverage -DVDT_LIBRARY=/usr

    - name: Build
      run: cmake --build build/coverage -j 2

    - name: Test
      working-directory: build/coverage
      run: ctest --output-on-failure --no-tests=error -j 2

    # CMake custom targets are not quaranted to be run in order,
    # hence we enforce it here.
    - name: Examples
      run: |
        cmake --build build/coverage -t run_example1a
        cmake --build build/coverage -t run_example1b
        cmake --build build/coverage -t run_example1c
        cmake --build build/coverage -t run_example2
        cmake --build build/coverage -t run_example3

    - name: Process coverage info
      run: cmake --build build/coverage -t coverage

    - name: Coveralls
      uses: coverallsapp/github-action@v2
      with:
        file: build/coverage/coverage.info

  sanitize:
    needs: [lint]

    runs-on: ubuntu-24.04

    container:
      image: rootproject/root:latest

    env: { CXX: clang++-18 }

    steps:
    - uses: actions/checkout@v5

    - name: Install Dependencies
      run: apt-get update -q
        && apt-get install clang-18 -q -y

    - name: Configure
      run: cmake --preset=ci-sanitize -DVDT_LIBRARY=/usr

    - name: Build
      run: cmake --build build/sanitize -j 2

    - name: Test
      working-directory: build/sanitize
      env:
        ASAN_OPTIONS: "strict_string_checks=1:\
          detect_stack_use_after_return=1:\
          check_initialization_order=1:\
          strict_init_order=1:\
          detect_leaks=1:\
          halt_on_error=1"
        UBSAN_OPTIONS: "print_stacktrace=1:\
          halt_on_error=1"
      run: ctest --output-on-failure --no-tests=error -j 2

  test:
    needs: [lint]

    strategy:
      matrix:
        container: ["latest"]

        type: [shared, static]

        include:
        - { type: shared, shared: YES }
        - { type: static, shared: NO }

    runs-on: ubuntu-24.04

    container:
      image: rootproject/root:${{ matrix.container }}

    steps:
    - uses: actions/checkout@v5

    - name: Install static analyzers
      run: >-
        apt-get install clang-tidy-18 cppcheck -y -q

        update-alternatives --install
        /usr/bin/clang-tidy clang-tidy
        /usr/bin/clang-tidy-18 180

    - name: Configure
      run: cmake --preset=ci-ubuntu -DVDT_LIBRARY=/usr

    - name: Build
      run: cmake --build build --config Release -j 2

    - name: Install
      run: cmake --install build --config Release --prefix prefix

    - name: Test
      working-directory: build
      run: ctest --output-on-failure --no-tests=error -C Release -j 2

  docs:
    # Deploy docs only when builds succeed
    needs: [sanitize, test]

    runs-on: ubuntu-24.04

    # To enable, first you have to create an orphaned gh-pages branch:
    #
    #    git switch --orphan gh-pages
    #    git commit --allow-empty -m "Initial commit"
    #    git push -u origin gh-pages
    #
    # Edit the <name> placeholder below to your GitHub name, so this action
    # runs only in your repository and no one else's fork. After these, delete
    # this comment and the last line in the conditional below.
    # If you do not wish to use GitHub Pages for deploying documentation, then
    # simply delete this job similarly to the coverage one.
    if: github.ref == 'refs/heads/master'
      && github.event_name == 'push'
      && github.repository_owner == 'rlalik'
      && false

    permissions:
      contents: write

    steps:
    - uses: actions/checkout@v5

    - uses: actions/setup-python@v5
      with: { python-version: "3.12" }

    - name: Install m.css dependencies
      run: pip3 install jinja2 Pygments

    - name: Install Doxygen
      run: apt-get update -q
        && apt-get install doxygen -q -y

    - name: Build docs
      run: cmake "-DPROJECT_SOURCE_DIR=$PWD" "-DPROJECT_BINARY_DIR=$PWD/build" -DVDT_LIBRARY=/usr
        -P cmake/docs-ci.cmake

    - name: Deploy docs
      uses: peaceiris/actions-gh-pages@v4
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: build/docs/html
